forward () {
	#rtmotor0に入力する周波数と時間を作る
	#左右に曲がる場合には周波数を加減して調節を
	awk '{print 410,395,int(1000*$1/(45*3.141592))}' <<< $1	|
	#時間が負なら周波数も負にする
	awk '$3>=0{print}$3<0{print -$1,-$2,-$3}' > /dev/rtmotor0
}

turn () {
	awk '{print -400,400,int(1000*$1/180)}' <<< $1	|
	awk '$3>=0{print}$3<0{print -$1,-$2,-$3}' > /dev/rtmotor0
}

curve_to_wall () {
	tmp=/run/shm/$$
	: > $tmp-sem
	while [ ! -s $tmp-sem ] ; do
		if [ "$1" = "R" ] ; then
			echo 350 400 300 > /dev/rtmotor0
		else
			echo 400 350 300 > /dev/rtmotor0
		fi
		[ $(numsum -r < /dev/rtlightsensor0) -gt 1000 ] && echo w > $tmp-sem 
	done
	rm $tmp-*
}

avoid_wall () {
	tmp=/run/shm/$$
	: > $tmp-sem
	while [ ! -s $tmp-sem ] ; do
		if [ "$1" = "R" ] ; then
			turn 15
		else
			turn -15
		fi
		[ $(awk '{print $1+$4}' < /dev/rtlightsensor0) -lt 400 ] && echo ok > $tmp-sem 
	done
	rm $tmp-*
}

to_wall_highspeed () {
	tmp=/run/shm/$$
	: > $tmp-sem
	n=300
	while [ ! -s $tmp-sem ] ; do
		echo $n $n 200 > /dev/rtmotor0
		[ $n -lt 1500 ] && n=$(( n + 100 ))

		[ $(numsum -r < /dev/rtlightsensor0) -gt 500 ] && echo w > $tmp-sem &
	done

	while [ $n -gt 400 ] ; do
		n=$(( n - 200 ))
		echo $n $n 50 > /dev/rtmotor0
	done
	rm $tmp-*
}
